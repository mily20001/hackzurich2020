{"version":3,"sources":["components/cantons.ts","components/BackgroundMap.tsx","components/colors.ts","components/InfoBox.tsx","components/ColoringSwitch.tsx","components/ArticleList.tsx","services/service.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Canton","CantonInfo","AG","name","population","AI","AR","BE","BL","BS","FR","GE","GL","GR","JU","LU","NE","NW","OW","SG","SH","SO","SZ","TG","TI","UR","VD","VS","ZG","ZH","cantons","Colors","colors","StyledLeafletMap","styled","LeafletMap","right","BackgroundMap","onActiveCantonChange","activeCanton","rightSpace","clickedCanton","setClickedCanton","coloredCantons","useMemo","features","map","canton","idx","properties","strokeWidth","fillColor","fillOpacity","center","zoom","TileLayer","attribution","url","GeoJSON","key","data","onmouseout","style","entry","weight","id","color","onEachFeature","e","l","on","undefined","ColoringMode","TitleBox","div","CantonName","InfoBoxContainer","InfoBoxElement","InfoBox","displayedDate","textAlign","confirmed_total","confirmed_1delta","confirmed_7delta","deceased_total","deceased_1delta","deceased_7delta","released_total","released_1delta","released_7delta","className","format","title","value","precision","valueStyle","LIGHT_GREY","RED","prefix","ArrowUpOutlined","Math","round","random","GREEN","ArticleCategory","ColoringSwitch","setMode","mode","Group","options","Object","values","label","onChange","target","optionType","buttonStyle","size","categoryColors","NEGATIVE","NEUTRAL","POSITIVE","TWITTER","BLUE","categoryNames","articles","author","category","preview","text","ExtraContainer","TitleContainer","Container","ArticleList","close","useState","keys","selectedTypes","setSelectedTypes","paddingBottom","display","justifyContent","fontWeight","icon","CloseOutlined","onClick","article","marginBottom","extra","getInfections","date","a","console","log","moment","axios","get","params","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","ArticleListContainer","ModuleContainer","TimeSliderContainer","SliderWrapper","SliderLegendContainer","StyledSlider","Slider","CalendarButton","CalendarButtonContainer","App","baseDate","diffDays","diff","TOTAL_CASES","coloringMode","setColoringMode","setActiveCanton","sliderValue","setSliderValue","calendarModalVisible","setCalendarModalVisible","add","useQuery","isLoading","error","exact","path","width","pointerEvents","CalendarOutlined","shape","max","tipFormatter","flexGrow","visible","onCancel","footer","type","inputReadOnly","allowClear","disabledDate","isBetween","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.78b20aef.chunk.js","sourcesContent":["import cantons from './swissCantons.json';\n\nexport enum Canton {\n  ZH = 'ZH',\n  BE = 'BE',\n  LU = 'LU',\n  UR = 'UR',\n  SZ = 'SZ',\n  OW = 'OW',\n  NW = 'NW',\n  GL = 'GL',\n  ZG = 'ZG',\n  FR = 'FR',\n  SO = 'SO',\n  BS = 'BS',\n  BL = 'BL',\n  SH = 'SH',\n  AR = 'AR',\n  AI = 'AI',\n  SG = 'SG',\n  GR = 'GR',\n  AG = 'AG',\n  TG = 'TG',\n  TI = 'TI',\n  VD = 'VD',\n  VS = 'VS',\n  NE = 'NE',\n  GE = 'GE',\n  JU = 'JU',\n}\n\nexport const CantonInfo: { [key in Canton]: { name: string; population: number } } = {\n  [Canton.AG]: { name: 'Aargau', population: 685424 },\n  [Canton.AI]: { name: 'Appenzell Innerrhoden', population: 16145 },\n  [Canton.AR]: { name: 'Appenzell Ausserrhoden', population: 55234 },\n  [Canton.BE]: { name: 'Bern', population: 1034977 },\n  [Canton.BL]: { name: 'Basel-Landschaft', population: 288132 },\n  [Canton.BS]: { name: 'Basel-Stadt', population: 194766 },\n  [Canton.FR]: { name: 'Freiburg', population: 318714 },\n  [Canton.GE]: { name: 'Genf', population: 499480 },\n  [Canton.GL]: { name: 'Glarus', population: 40403 },\n  [Canton.GR]: { name: 'Graubünden', population: 198379 },\n  [Canton.JU]: { name: 'Jura', population: 73419 },\n  [Canton.LU]: { name: 'Luzern', population: 409557 },\n  [Canton.NE]: { name: 'Neuenburg', population: 176850 },\n  [Canton.NW]: { name: 'Nidwalden', population: 43223 },\n  [Canton.OW]: { name: 'Obwalden', population: 37841 },\n  [Canton.SG]: { name: 'St. Gallen', population: 507697 },\n  [Canton.SH]: { name: 'Schaffhausen', population: 81991 },\n  [Canton.SO]: { name: 'Solothurn', population: 273194 },\n  [Canton.SZ]: { name: 'Schwyz', population: 159165 },\n  [Canton.TG]: { name: 'Thurgau', population: 276472 },\n  [Canton.TI]: { name: 'Tessin', population: 353343 },\n  [Canton.UR]: { name: 'Uri', population: 36433 },\n  [Canton.VD]: { name: 'Waadt', population: 799145 },\n  [Canton.VS]: { name: 'Wallis', population: 343955 },\n  [Canton.ZG]: { name: 'Zug', population: 126837 },\n  [Canton.ZH]: { name: 'Zürich', population: 1520968 },\n};\n\nexport interface CantonGeoJson {\n  type: 'FeatureCollection';\n  features: {\n    type: 'Feature';\n    id: Canton;\n    geometry: {\n      type: 'Polygon';\n      coordinates: [number, number][];\n    };\n    properties: {\n      name: string;\n      stroke?: string;\n      fill?: string;\n      strokeWidth?: number;\n      strokeOpacity?: number;\n      fillOpacity?: number;\n    };\n  }[];\n}\n\nexport default (cantons as unknown) as CantonGeoJson;\n","import React, { useMemo } from 'react';\nimport { Map as LeafletMap, TileLayer, GeoJSON } from 'react-leaflet';\nimport styled from 'styled-components';\n\nimport cantons, { Canton } from './cantons';\n\nconst colors = ['#ff0000', '#00ff00', '#0000ff', '#00e0ff', '#ffe600'];\n\ninterface BackgroundMapProps {\n  onActiveCantonChange: (canton: Canton | undefined) => void;\n  activeCanton: Canton | undefined;\n  setClickedCanton: (canton: Canton | undefined) => void;\n  clickedCanton: Canton | undefined;\n  rightSpace?: number;\n}\n\nconst BackgroundMap: React.FC<BackgroundMapProps> = ({\n  onActiveCantonChange,\n  activeCanton,\n  rightSpace = 0,\n  clickedCanton,\n  setClickedCanton,\n}) => {\n  const position: [number, number] = [46.823, 8.1165];\n  const coloredCantons = useMemo(\n    () => ({\n      ...cantons,\n      features: cantons.features.map((canton, idx) => ({\n        ...canton,\n        properties: {\n          ...canton.properties,\n          strokeWidth: 1,\n          fillColor: colors[idx % 5],\n          fillOpacity: 0.2,\n        },\n      })),\n    }),\n    []\n  );\n\n  return (\n    <StyledLeafletMap center={position} zoom={8} right={rightSpace}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n      />\n      <GeoJSON\n        key={clickedCanton}\n        data={coloredCantons}\n        onmouseout={() => onActiveCantonChange(clickedCanton)}\n        style={(entry) => {\n          return {\n            weight: entry?.id === activeCanton && entry?.id === clickedCanton ? 4 : 1,\n            color: '#ddd',\n            fillColor: entry?.properties.fillColor,\n            fillOpacity:\n              entry?.id === clickedCanton ? 0.85 : entry?.id === activeCanton ? 0.45 : 0.2,\n          };\n        }}\n        onEachFeature={(e, l) => {\n          if (!clickedCanton) {\n            l.on('mouseover', () => {\n              onActiveCantonChange(e.id as Canton);\n            });\n          }\n\n          l.on('click', () => {\n            if (clickedCanton === (e.id as Canton)) {\n              setClickedCanton(undefined);\n            } else {\n              setClickedCanton(e.id as Canton);\n            }\n            onActiveCantonChange(e.id as Canton);\n          });\n        }}\n      />\n    </StyledLeafletMap>\n  );\n};\n\nconst StyledLeafletMap = styled(LeafletMap)<{ right: number }>`\n  height: 100vh;\n  width: calc(100vw - ${({ right }) => right}px);\n  background-color: #090909;\n  position: absolute;\n  z-index: 0;\n  transition: width 0.4s;\n`;\n\nexport default BackgroundMap;\n","export enum Colors {\n  RED = '#e20000',\n  GREEN = '#00c700',\n  LIGHT_GREY = '#adadad',\n  BLUE = '#007bff',\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Canton, CantonInfo } from './cantons';\nimport { Moment } from 'moment';\nimport { Card, Statistic } from 'antd';\nimport { ArrowUpOutlined } from '@ant-design/icons';\nimport { Colors } from './colors';\nimport { InfectionApiResponse } from '../services/service';\n\ninterface InfoBoxProps {\n  activeCanton: Canton | undefined;\n  displayedDate: Moment;\n  data?: InfectionApiResponse;\n}\n\nconst InfoBox: React.FC<InfoBoxProps> = ({ activeCanton, displayedDate, data }) => {\n  if (!activeCanton || !data) {\n    return (\n      <InfoBoxContainer>\n        <InfoBoxElement>\n          <div style={{ textAlign: 'center' }}>Hover Canton to see details</div>\n        </InfoBoxElement>\n      </InfoBoxContainer>\n    );\n  }\n\n  const {\n    confirmed_1delta,\n    confirmed_7delta,\n    confirmed_total,\n    deceased_1delta,\n    deceased_7delta,\n    deceased_total,\n    released_1delta,\n    released_7delta,\n    released_total,\n  } = data[activeCanton];\n\n  return (\n    <InfoBoxContainer>\n      <InfoBoxElement className=\"full\">\n        <TitleBox>\n          <CantonName>{CantonInfo[activeCanton].name}</CantonName>\n          <div>Data at {displayedDate.format('DD-MM-YYYY')}:</div>\n        </TitleBox>\n        <Card>\n          <Statistic\n            title=\"Population\"\n            value={CantonInfo[activeCanton].population}\n            precision={0}\n            valueStyle={{ color: Colors.LIGHT_GREY }}\n          />\n        </Card>\n        <Card>\n          <Statistic\n            title=\"Total cases\"\n            value={confirmed_total}\n            precision={0}\n            valueStyle={{ color: Colors.RED }}\n            prefix={<ArrowUpOutlined />}\n          />\n        </Card>\n        <Card>\n          <Statistic\n            title=\"Active cases\"\n            value={released_total ? confirmed_total - released_total - deceased_total : '-'}\n            precision={0}\n            valueStyle={{ color: Colors.RED }}\n            prefix={<ArrowUpOutlined />}\n          />\n        </Card>\n        <Card>\n          <Statistic\n            title=\"Fatal cases\"\n            value={deceased_total}\n            precision={0}\n            valueStyle={{ color: Colors.RED }}\n            prefix={<ArrowUpOutlined />}\n          />\n        </Card>\n        <Card>\n          <Statistic\n            title=\"Corona scare score\"\n            value={Math.round(Math.random() * 1000) / 100}\n            precision={2}\n            valueStyle={{ color: Colors.GREEN }}\n            prefix={<ArrowUpOutlined />}\n          />\n        </Card>\n        <Card>\n          <Statistic\n            title=\"Corona cases score\"\n            value={Math.round(Math.random() * 1000) / 100}\n            precision={2}\n            valueStyle={{ color: Colors.GREEN }}\n            prefix={<ArrowUpOutlined />}\n          />\n        </Card>\n      </InfoBoxElement>\n    </InfoBoxContainer>\n  );\n};\n\nconst TitleBox = styled.div`\n  padding-bottom: 10px;\n  text-align: center;\n`;\n\nconst CantonName = styled.div`\n  font-weight: 700;\n  font-size: 22px;\n`;\n\nconst InfoBoxContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst InfoBoxElement = styled.div`\n  pointer-events: auto;\n  background-color: #282828;\n  border: 1px solid #666;\n  border-radius: 5px;\n  padding: 10px;\n  display: block;\n  font-size: 16px;\n  width: 200px;\n  height: auto;\n  transition: max-height 0.5s;\n  max-height: 75px;\n  overflow-y: hidden;\n  &.full {\n    max-height: 1500px;\n  }\n`;\n\nexport default InfoBox;\n","import React from 'react';\nimport { Radio } from 'antd';\n\nexport enum ColoringMode {\n  TOTAL_CASES = 'Total cases',\n  CASES_SCORE = 'Covid cases score',\n  SCARE_SCORE = 'Covid scare score',\n}\n\ninterface ColoringSwitchProps {\n  mode: ColoringMode;\n  setMode: (newMode: ColoringMode) => void;\n}\n\nconst ColoringSwitch: React.FC<ColoringSwitchProps> = ({ setMode, mode }) => {\n  return (\n    <Radio.Group\n      options={\n        Object.values(ColoringMode).map((mode) => ({ label: mode, value: mode })) as {\n          value: ColoringMode;\n          label: ColoringMode;\n        }[]\n      }\n      onChange={(e) => setMode(e.target.value)}\n      value={mode}\n      optionType=\"button\"\n      buttonStyle=\"solid\"\n      size=\"large\"\n    />\n  );\n};\n\nexport default ColoringSwitch;\n","import React, { useState } from 'react';\nimport { Button, Card, Checkbox } from 'antd';\nimport styled from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Colors } from './colors';\n\nenum ArticleCategory {\n  POSITIVE,\n  NEUTRAL,\n  NEGATIVE,\n  TWITTER,\n}\n\nconst categoryColors: { [key in ArticleCategory]: string } = {\n  [ArticleCategory.NEGATIVE]: Colors.RED,\n  [ArticleCategory.NEUTRAL]: Colors.LIGHT_GREY,\n  [ArticleCategory.POSITIVE]: Colors.GREEN,\n  [ArticleCategory.TWITTER]: Colors.BLUE,\n};\n\nconst categoryNames: { [key in ArticleCategory]: string } = {\n  [ArticleCategory.NEGATIVE]: 'Negative',\n  [ArticleCategory.NEUTRAL]: 'Neutral',\n  [ArticleCategory.POSITIVE]: 'Positive',\n  [ArticleCategory.TWITTER]: 'Twitter',\n};\n\ninterface Article {\n  title: string;\n  author: string;\n  preview: string;\n  category: ArticleCategory;\n  text: string;\n}\n\nconst articles: Article[] = [\n  {\n    title: 'Rekord od początku epidemii',\n    author: 'Jan Kowalski',\n    category: ArticleCategory.POSITIVE,\n    preview:\n      'Mówi się, że koty chodzą własnymi drogami i nie wymagają tak dużej atencji jak psy. Ale czy to oznacza, ' +\n      'że mruczków nie trzeba wychowywać? Nic bardziej mylnego! Koty także potrzebują naszej opieki i miłości. ' +\n      'Wystrzegaj się tych błędów, a wychowasz zdrowego i szczęśliwego mruczka.',\n    text: 'xdxd',\n  },\n  {\n    title: 'Rekord od początku epidemii',\n    author: 'Jan Kowalski',\n    category: ArticleCategory.NEGATIVE,\n    preview:\n      'Mówi się, że koty chodzą własnymi drogami i nie wymagają tak dużej atencji jak psy. Ale czy to oznacza, ' +\n      'że mruczków nie trzeba wychowywać? Nic bardziej mylnego! Koty także potrzebują naszej opieki i miłości. ' +\n      'Wystrzegaj się tych błędów, a wychowasz zdrowego i szczęśliwego mruczka.',\n    text: 'xdxd',\n  },\n  {\n    title: 'Rekord od początku epidemii',\n    author: 'Jan Kowalski',\n    category: ArticleCategory.TWITTER,\n    preview:\n      'Mówi się, że koty chodzą własnymi drogami i nie wymagają tak dużej atencji jak psy. Ale czy to oznacza, ' +\n      'że mruczków nie trzeba wychowywać? Nic bardziej mylnego! Koty także potrzebują naszej opieki i miłości. ' +\n      'Wystrzegaj się tych błędów, a wychowasz zdrowego i szczęśliwego mruczka.',\n    text: 'xdxd',\n  },\n  {\n    title: 'Rekord od początku epidemii',\n    author: 'Jan Kowalski',\n    category: ArticleCategory.NEUTRAL,\n    preview:\n      'Mówi się, że koty chodzą własnymi drogami i nie wymagają tak dużej atencji jak psy. Ale czy to oznacza, ' +\n      'że mruczków nie trzeba wychowywać? Nic bardziej mylnego! Koty także potrzebują naszej opieki i miłości. ' +\n      'Wystrzegaj się tych błędów, a wychowasz zdrowego i szczęśliwego mruczka.',\n    text: 'xdxd',\n  },\n  {\n    title: 'Rekord od początku epidemii',\n    author: 'Jan Kowalski',\n    category: ArticleCategory.NEGATIVE,\n    preview:\n      'Mówi się, że koty chodzą własnymi drogami i nie wymagają tak dużej atencji jak psy. Ale czy to oznacza, ' +\n      'że mruczków nie trzeba wychowywać? Nic bardziej mylnego! Koty także potrzebują naszej opieki i miłości. ' +\n      'Wystrzegaj się tych błędów, a wychowasz zdrowego i szczęśliwego mruczka.',\n    text: 'xdxd',\n  },\n];\n\ninterface ArticleListProps {\n  close: () => void;\n}\n\nconst ArticleList: React.FC<ArticleListProps> = ({ close }) => {\n  const [selectedTypes, setSelectedTypes] = useState<ArticleCategory[]>(\n    (Object.keys(ArticleCategory) as unknown) as ArticleCategory[],\n  );\n\n  return (\n    <Container>\n      <div style={{ paddingBottom: 20 }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between', paddingBottom: 5 }}>\n          <h2>Articles <span style={{ fontWeight: 400 }}>(124)</span></h2>\n          <Button icon={<CloseOutlined />} onClick={close} />\n        </div>\n        <Checkbox.Group\n          value={selectedTypes}\n          onChange={value => setSelectedTypes(value as ArticleCategory[])}\n          options={Object.keys(categoryNames).map((category) => ({\n            label: (\n              <span style={{ color: categoryColors[(category as unknown) as ArticleCategory] }}>\n                {categoryNames[(category as unknown) as ArticleCategory]}\n              </span>\n            ),\n            value: category,\n          }))}\n        />\n      </div>\n      {articles.map((article) => (\n        <Card\n          style={{ marginBottom: 15 }}\n          title={<TitleContainer>{article.title}</TitleContainer>}\n          extra={\n            <ExtraContainer>\n              <div style={{ color: categoryColors[article.category] }}>\n                {categoryNames[article.category]}\n              </div>\n              <small>{article.author}</small>\n            </ExtraContainer>\n          }\n        >\n          <p>{article.preview}</p>\n        </Card>\n      ))}\n    </Container>\n  );\n};\n\nconst ExtraContainer = styled.div`\n  max-width: 75px;\n`;\n\nconst TitleContainer = styled.div`\n  white-space: initial;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  padding: 10px;\n`;\n\nexport default ArticleList;\n","import axios from 'axios';\nimport moment, { Moment } from 'moment';\nimport { Canton } from '../components/cantons';\n\nexport type InfectionApiResponse = {\n  [key in Canton]: {\n    confirmed_7delta: number;\n    deceased_7delta: number;\n    released_7delta: number;\n    confirmed_1delta: number;\n    deceased_1delta: number;\n    released_1delta: number;\n    confirmed_total: number;\n    deceased_total: number;\n    released_total: number;\n  };\n};\n\nexport const getInfections = async (key: string, date: string): Promise<InfectionApiResponse> => {\n  console.log('getting', date, moment(date).format('YYYY-MM-DD'))\n  const { data } = await axios.get<InfectionApiResponse>('/api/coronacases', {\n    params: { date: moment(date).format('YYYY-MM-DD') },\n  });\n  return data;\n};\n","import React, { useState } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport 'antd/dist/antd.dark.css';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { CalendarOutlined } from '@ant-design/icons';\n\nimport BackgroundMap from './components/BackgroundMap';\n\n// https://github.com/PaulLeCam/react-leaflet/issues/255\nimport L from 'leaflet';\nimport { Canton } from './components/cantons';\nimport { Button, DatePicker, Modal, Slider } from 'antd';\nimport moment from 'moment';\nimport InfoBox from './components/InfoBox';\nimport ColoringSwitch, { ColoringMode } from './components/ColoringSwitch';\nimport ArticleList from './components/ArticleList';\nimport { useQuery } from 'react-query';\nimport { getInfections } from './services/service';\n// @ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nfunction App() {\n  const baseDate = moment('2020-02-27');\n  const diffDays = moment().diff(baseDate, 'days');\n\n  const [coloringMode, setColoringMode] = useState<ColoringMode>(ColoringMode.TOTAL_CASES);\n  const [activeCanton, setActiveCanton] = useState<Canton | undefined>();\n  const [clickedCanton, setClickedCanton] = useState<Canton | undefined>();\n  const [sliderValue, setSliderValue] = useState(diffDays);\n  const [calendarModalVisible, setCalendarModalVisible] = useState(false);\n\n  const displayedDate = moment(baseDate).add(sliderValue, 'days');\n\n  const {isLoading, error, data} = useQuery(['infectionData', displayedDate], getInfections)\n\n  const right = !!clickedCanton ? 400 : 0;\n  return (\n    <div className=\"App\">\n      {right !== 0 && (\n        <ArticleListContainer right={right}>\n          <ArticleList close={() => setClickedCanton(undefined)} />\n        </ArticleListContainer>\n      )}\n      <BackgroundMap\n        activeCanton={activeCanton}\n        onActiveCantonChange={setActiveCanton}\n        rightSpace={right}\n        clickedCanton={clickedCanton}\n        setClickedCanton={setClickedCanton}\n      />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <ModuleContainer right={right}>\n              <div style={{ width: '100%' }}>\n                <InfoBox activeCanton={activeCanton} displayedDate={displayedDate} data={data} />\n              </div>\n            </ModuleContainer>\n            <ModuleContainer right={right}>\n              <div style={{ pointerEvents: 'auto', textAlign: 'center' }}>\n                <ColoringSwitch mode={coloringMode} setMode={setColoringMode} />\n              </div>\n            </ModuleContainer>\n            <ModuleContainer right={right}>\n              <TimeSliderContainer>\n                <CalendarButtonContainer>\n                  <CalendarButton>\n                    <Button\n                      icon={<CalendarOutlined />}\n                      shape=\"circle-outline\"\n                      size=\"large\"\n                      onClick={() => setCalendarModalVisible(true)}\n                    />\n                  </CalendarButton>\n                </CalendarButtonContainer>\n                <SliderWrapper>\n                  <SliderLegendContainer>\n                    <div>{baseDate.format('DD-MM-YYYY')}</div>\n                    <div>{moment().format('DD-MM-YYYY')}</div>\n                  </SliderLegendContainer>\n                  <StyledSlider\n                    value={sliderValue}\n                    max={diffDays}\n                    onChange={(value: number) => setSliderValue(value)}\n                    tipFormatter={(value) =>\n                      moment(baseDate).add(value, 'days').format('DD-MM-YYYY')\n                    }\n                  />\n                </SliderWrapper>\n                <div style={{ flexGrow: 1 }} />\n              </TimeSliderContainer>\n              <Modal\n                visible={calendarModalVisible}\n                onCancel={() => setCalendarModalVisible(false)}\n                title=\"Select date of data to display\"\n                footer={[\n                  <Button type=\"primary\" onClick={() => setCalendarModalVisible(false)}>\n                    OK\n                  </Button>,\n                ]}\n              >\n                <DatePicker\n                  value={displayedDate}\n                  inputReadOnly\n                  size=\"large\"\n                  allowClear={false}\n                  onChange={(value) => value && setSliderValue(value.diff(baseDate, 'days'))}\n                  disabledDate={(date) => !date.isBetween(baseDate, moment(), undefined, '[]')}\n                />\n              </Modal>\n            </ModuleContainer>\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst ArticleListContainer = styled.div<{ right: number }>`\n  position: absolute;\n  background-color: #282828;\n  top: 0;\n  bottom: 0;\n  width: ${({ right }) => right}px;\n  right: 0;\n`;\n\nconst ModuleContainer = styled.div<{ right: number }>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: ${({ right }) => right}px;\n  z-index: 1;\n  pointer-events: none;\n  padding: 10px;\n  transition: right 0.4s;\n`;\n\nconst TimeSliderContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  padding-bottom: 15px;\n`;\n\nconst SliderWrapper = styled.div`\n  width: 80%;\n`;\n\nconst SliderLegendContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  & > div:first-of-type {\n    transform: translateX(-40%);\n  }\n\n  & > div:last-of-type {\n    transform: translateX(60%);\n  }\n`;\n\nconst StyledSlider = styled(Slider)`\n  pointer-events: auto;\n  width: 100%;\n  & .ant-slider-track {\n    opacity: 0;\n  }\n\n  .ant-slider-handle {\n    transform: translateX(-50%) scale(2) !important;\n    border-color: #177ddc;\n  }\n\n  .ant-slider-rail {\n    background-color: #444;\n  }\n`;\n\nconst CalendarButton = styled.div`\n  pointer-events: auto;\n  position: absolute;\n  right: 40px;\n  top: -35px;\n`;\n\nconst CalendarButtonContainer = styled.div`\n  position: relative;\n  flex-grow: 1;\n  justify-content: flex-end;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}